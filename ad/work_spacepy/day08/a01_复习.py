'''
时间操作
1.获取时间戳
2.将时间戳转换成时间元组
3.将时间元组转换成可视化时间(格式化输出时间)
4.将时间格式的字符串转换成时间元组
5.将时间元组转换成时间戳

注意:计算日期我们可以通过时间戳计算

经常会用于计算某个程序执行了多长时间,cpu运行时间 和等待时间

下午:
面向对象: 封装  继承  多态
封装:将属性和方法放到一个抽象的类中,对外界隐藏功能实现的细节,
继承:子类去继承父类,然后子类直接拥有了父类属性和方法
多态:简单来说,父类的同一功能在子类有不同的体现

1.创建一个类,创建出来

2.根据这个类去实例化对象

3.通过对象去调用属性和方法
    语法:对象.属性名   对象.方法名(参数)

4.修改属性的值
    语法:对象.属性名 = 值

5.初始化方法:
    实例化对象的时候执行, 作用:初始化对象

6.self:表示对象在调用方法的时候,会将自己传进来

7.类属性:写在类中 使用:类名.属性名
  对象属性:self.名字 所有对象都可以共享类属性
  注意:如果对象.属性 先去找对象属性 ,没有找到去找类属性,都没有就报错

8.私有化  在属性前面__
    注意:私有化属性之后自能在类里面使用,外界直接访问不了
    如果需要访问:我们自己创建两个方法:
    get方法:这个方法的作用,将属性的值返回来
    set方法::这个方法的作用,修改这个属性的值,

继承

9.单继承 子类(父类)   多继承
初始化父类的时候有两种方式
父类名.__init():按照程序一级一级去执行,问题-有的父类可能会执行多次
super().__init():c3算法 保证父类只执行一次

注意:如果多个父类都有同一个属性:属性最终的值是最后的那个父类中的值
     如果多个父类有同名的方法 最先执行第一个父类的

10.重写:如果父类的方法不能满足我们的需求,那么对父类的方法进行重写


11 多态:多态是基于 封装 继承 重写



'''